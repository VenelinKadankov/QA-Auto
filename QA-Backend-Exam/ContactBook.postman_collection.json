{
	"info": {
		"_postman_id": "18359a79-9432-46e6-9f82-b781a521b4d9",
		"name": "ContactBook",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "16007651"
	},
	"item": [
		{
			"name": "Contacts",
			"item": [
				{
					"name": "GET",
					"item": [
						{
							"name": "Test_GetAllContacts",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Response is json\", function () {\r",
											"    pm.response.to.be.json;\r",
											"    const respBody = pm.response.json();\r",
											"\tpm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json; charset=utf-8');\r",
											"\tpm.expect(typeof(respBody)).to.be.equal(\"object\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/contacts",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"contacts"
									]
								}
							},
							"response": []
						},
						{
							"name": "Test_GetContactByKeyWord",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Get by keyword first object contains given name\", function () {\r",
											"    pm.response.to.be.json;\r",
											"\tconst respBody = pm.response.json();\r",
											"\tpm.expect(respBody[0].firstName).to.be.equal(\"Michael\");\r",
											"    \tpm.expect(respBody[0].lastName).to.be.equal(\"Jackson\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/contacts/search/{{searchKeyword}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"contacts",
										"search",
										"{{searchKeyword}}"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "POST",
					"item": [
						{
							"name": "Test_CreateContact",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Successful POST contact request\", () => {\r",
											"    let id = pm.response.json().contact.id;\r",
											"    pm.environment.set(\"contactId\", id);\r",
											"  pm.expect(pm.response.code).to.be.oneOf([201,202]);\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"firstName\": \"venko\",\r\n    \"lastName\": \"kadankov\",\r\n    \"email\": \"venkokadankov@abv.bg\",\r\n    \"phone\": \"+1 800 200 300\",\r\n    \"comments\": \"not real mail\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/contacts",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"contacts"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "PATCH",
					"item": [
						{
							"name": "Test_TryEditContact",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 404 on edit\", function () {\r",
											"    pm.response.to.have.status(404);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"firstName\": \"Marie\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/contacts/{{contactId}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"contacts",
										"{{contactId}}"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "DELETE",
					"item": [
						{
							"name": "Test_DeleteLastContact",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Delete contact request\", () => {\r",
											"    let respBody = pm.response.json();\r",
											"    pm.expect(respBody.msg).to.be.equal(\"Contact deleted: \" + pm.environment.get(\"contactId\"));\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/contacts/{{contactId}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"contacts",
										"{{contactId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Test_DeleteInvalidContact",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 404\", function () {\r",
											"    pm.response.to.have.status(404);\r",
											"});\r",
											"\r",
											"pm.test(\"Delete contact request\", () => {\r",
											"    let respBody = pm.response.json();\r",
											"    pm.expect(respBody.errMsg).to.be.equal(\"Cannot find contact by id: \" + pm.environment.get(\"contactId\"));\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/contacts/{{contactId}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"contacts",
										"{{contactId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Test_AssertContactIsDeleted",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Check if deleted contact is no longer in contacts\", function () {\r",
											"    pm.response.to.be.json;\r",
											"\tconst respBody = pm.response.json();\r",
											"\tvar ids = respBody.map(r => r.id);\r",
											"    pm.expect(pm.environment.get(\"contactId\")).to.be.not.oneOf(ids);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/contacts",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"contacts"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		}
	]
}